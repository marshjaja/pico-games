pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
function _init()
	state="play"
	i_plr()
	
	-- game constants
	mx=0
	my=0
	cam_x=0
	cam_y=0
	max_key=2
	message=""
	message_t=45
	anitimer=5
	
	-- flags
	wall=0
	key=1
	door=2
	potion=4
	win=7
	
	-- camera box
	box={
	x=32,
	y=32,
	x2=88,
	y2=88,
	}
	
	i_enemies()
end

function _update()

	if state=="play" then
	    --animate
	 mine_plr()
		move_player()
		
		if message_t > 0 then
			message_t -= 1
		end
	
		u_enemies()
	end
end

function _draw()
	cls()
	if state=="play" then
		draw_map()
		draw_plr()
		check_win_lose()
		d_enemies()
		--draw_visibility()
		debugging()
		
		if message_t > 0 then
			print(message, 4, 110, 10)
		end
	
	
		local inv_text = "inventory"
		local keys_text = "keys:"..plr.keys
		local potions_text = "potions:"..plr.potions
	
		-- calculate the width of the widest line (for right alignment)
		local max_width = max(#inv_text, #keys_text, #potions_text) * 4
		local x = 128 - max_width - 1  -- 1-pixel padding from right
		local y = 1
	
		print(inv_text, x-8, y+8, 0)           -- black (colour 0)
		print(keys_text, x-8, y + 16, 7)      -- white
		print(potions_text, x-8, y + 24, 7)  -- white
	
		if (btn(‚ùé)) show_inventory()
	elseif state=="dead" then
	
		print("dead")
	end
	
		--rectfill(0,0,127,15,8)
end




	-- scrolling map --
--	if plr.x >=60 and plr.x <=189 then
--		cam_x= plr.x -60
--	end
--	if plr.y >=60 and plr.y <=189 then
--		cam_y= plr.y -60
--	end
--	if plr.x > 127 then
--		cam_x=128
--	else 
--	cam_x=0
--	end

  
-->8
-- player movement
function i_plr()
	plr={
	 sprite = 1,
	 msprite=10,
		x = 63,
		y = 63,
		ox=60,
		oy=60,
		w=8,
		h=8,
		keys=0,
		potions=0,
		flp=false,
		state = "idle",
		mining=false,
		facing="right",
		timing = 0.15,
		mtiming=0.01
		}
	cam_x=0
	cam_y=0
	
	mapx=flr(plr.x/16)*16
	mapy=flr(plr.y/16)*16
	
	box={
	x=32,
	y=32,
	x2=88,
	y2=88,
	}
end



function move_player()
	-- set default state
	-- only reset to idle if not already mining
if plr.state != "mining" then
  plr.state = "idle"
end


	-- check movement input and update position/state
	plr.ox = plr.x
	plr.oy = plr.y

	if btn(‚¨ÖÔ∏è) and can_move(plr.x - 1, plr.y) then
		plr.x -= 1
		plr.flp = true
		plr.facing = "left"
		plr.state = "walk"
	elseif btn(‚û°Ô∏è) and can_move(plr.x + 1, plr.y) then
		plr.x += 1
		plr.flp = false
		plr.facing = "right"
		plr.state = "walk"
	elseif btn(‚¨ÜÔ∏è) and can_move(plr.x, plr.y - 1) then
		plr.y -= 1
		plr.facing = "up"
		plr.state = "walk"
	elseif btn(‚¨áÔ∏è) and can_move(plr.x, plr.y + 1) then
		plr.y += 1
		plr.facing = "down"
		plr.state = "walk"
	end
	

	if map_collide(plr.x, plr.y, plr.w, plr.h) then
		plr.x = plr.ox
		plr.y = plr.oy
	end

	cam_move()
	interact(plr.x, plr.y)
	animate_plr()
end


function animate_plr()
	if plr.state == "walk" then
		if plr.sp < 4.6 then
			plr.sp += 0.2
		else
			plr.sp = 1
		end
	elseif plr.state == "mining" then
		plr.sp = 10
		plr.state = "idle"
		print("mining!", 0, 10, 8)
	
 -- single mining frame
	else
		plr.sp = 6 -- idle frame
	end
end


function cam_move()
	 if plr.x < box.x then
 	plr.x =box.x
 	cam_x-=1
 elseif plr.x > box.x2 then
 	plr.x =box.x2
 	cam_x+=1
 end
 
 if cam_x <=0 then
 	cam_x=0
 	box.x=0
 elseif cam_x >= 128 then
 	cam_x=128
 	box.x2=127
 else
 	box.x=32
 	box.x2=88
 end
 
 if cam_y <=0 then
		cam_y=0
		box.y=0
 elseif cam_y >= 128 then
 	cam_y=128
 	box.y2=127
 else
 	box.y=32
 	box.y2=88
 end
 
 if plr.y < box.y then
 	plr.y =box.y
 	cam_y-=1
 elseif plr.y > box.y2 then
 	plr.y =box.y2
 	cam_y+=1
 end
end

function draw_plr()
	spr(flr(plr.sp), plr.x, plr.y, 1, 1, plr.flp, false)
end




-->8
function draw_map()
	camera(cam_x, cam_y)
	palt(0, false)
	palt(15, true)
	map(mx,my)
	palt(0, true)
	palt(15, false)
	camera(0, 0)
end

function map_collide(x,y,w,h)

	x+= cam_x
	y+= cam_y
	
	s1=mget(x/8,y/8)
	s2=mget((x+w-1)/8,y/8)
	s3=mget(x/8,(y+w-1)/8)
	s4=mget((x+w-1)/8,(y+w-1)/8)
	
	if fget(s1,3) or fget(s2,3) or fget(s3,3) or fget(s4,3) then
		return true
	end
	return false
end

function is_tile(tile_type, x, y)
local tile = mget(flr((x + cam_x) / 8), flr((y + cam_y) / 8))	return fget(tile, tile_type)
end


function check_win_lose()
	if is_tile(win, plr.x, plr.y) then
	--print("win", 4, 26, 11)
else
	--print("lose", 4, 34, 11)
end

end


function swap_tile(x,y)
	tile=mget(x,y)
	mset(x,y,tile+1)
end

function upswap_tile(x,y)
	tile=mget(x,y)
	mset(x,y,tile-1)
	mset(tx,ty,8)
end

function get_key(tx, ty)
	plr.keys += 1
	swap_tile(tx, ty)
end

function open_door(tx, ty)
	plr.keys -= 1
	swap_tile(tx, ty)
	mset(tx,ty,22)
end

function get_potion(tx, ty)
	plr.potions += 1
	swap_tile(tx, ty)
end

function interact()
	local px = plr.x + plr.w / 2
	local py = plr.y + plr.h / 2
	local tx = flr((px + cam_x) / 8)
	local ty = flr((py + cam_y) / 8)


	if fget(mget(tx, ty), key) then
		get_key(tx, ty)
		message = "picked up key"
		sfx(0)
		message_t = 45
	elseif fget(mget(tx, ty), door) and plr.keys > 0 then
		open_door(tx, ty)
		message = "opened door"
		message_t = 45
	elseif fget(mget(tx, ty), potion) then
		get_potion(tx, ty)
		message = "picked up a potion"
		message_t = 45
	end

end


function debugging()
if true then
	
		-- draw camera box
		rect(box.x,box.y,box.x2,box.y2)
		print("x: "..plr.x,4,4,7)
		print("y: "..plr.y,4,12,11)
	
		-- draw player box
		rect(plr.x, plr.y, plr.x + plr.w - 1, plr.y + plr.h - 1, 8)

		-- highlight tile being checked for interaction (now using centre)
		local px = plr.x + plr.w / 2
		local py = plr.y + plr.h / 2
		local tx = flr((px + cam_x) / 8)
		local ty = flr((py + cam_y) / 8)
		local sx = tx * 8 - cam_x
		local sy = ty * 8 - cam_y
		rect(sx, sy, sx + 7, sy + 7, 11)
	end
end
-->8
function show_inventory()
	local x = plr.x - 10
	local y = plr.y - 20

	print("inventory:", x, y, 0)              -- red (colour 8)
	print("keys:"..plr.keys, x, y + 6, 7)     -- green (colour 11)
	print("potions:"..plr.potions, x, y + 12, 7) -- green
end


function can_move(x,y) 
	-- this function give back a true or false wheter a maptile coordinate is a certain flag or not
	-- in this case we are asking if that map coordinate is a wall
	-- if is_tiel returns true than we want can_move to rerutrn false so we do a trick with the word not that flips a true to a false and vise versa
	--this means that if is_tile = true than can_move gives back false and visa versa
	return not is_tile(wall,x,y)
end



-->8
function break_block(tx, ty)
  local tile = mget(tx, ty)
  
  if tile == 32 then
    mset(tx, ty, 33)
  elseif tile == 33 then
    mset(tx, ty, 48)
  elseif tile == 48 then
    mset(tx, ty, 8)
  end
end

function mine_plr()
	if btnp(üÖæÔ∏è) then
		plr.state = "mining"

		local cx = flr((plr.x + 4 + cam_x) / 8)
		local cy = flr((plr.y + 4 + cam_y) / 8)

		if plr.facing == "right" then
			get_rnd_key(cx + 1, cy)
		elseif plr.facing == "left" then
			get_rnd_key(cx - 1, cy)
		elseif plr.facing == "up" then
			get_rnd_key(cx, cy - 1)
		elseif plr.facing == "down" then
			get_rnd_key(cx, cy + 1)
		end
	end
end


function get_rnd_key(tx, ty)
	local tile = mget(tx, ty)

	if tile == 32 then
		mset(tx, ty, 33)
	elseif tile == 33 then
		mset(tx, ty, 48)
	elseif tile == 48 then
	if max_key>0 then --get key only if max key not reached
		if rnd() < 0.4 then
			mset(tx, ty, 18)
			max_key -= 1  
		else
				mset(tx, ty, 8) 
			end
		else
			mset(tx, ty, 8) 
		end

	end
end

-->8
-- enemies --


function i_enemies()

	enemies={}
	--loop trough tiles and find enenmies
	for x=0,15 do
  for y=0,15 do
   if mget(x,y)==59 then
    mset(x,y,8)
    
    add(enemies,{
	    ex =16,
	    ey = 34,
	    ox = 16,--origin x pos
	    sp=59,
    	dx=1, --direction
    	dir="right"
    })
    add(enemies, {
	  ex = 80,
	  ey = 40,
	  ox = 80,
	  oy = 40,
	  dx = 0,
	  dy = 1,
	  sp = 59,
	  dir = "up"
	})

	   add(enemies, {
	    ex = 96,
	    ey = 96,
	    ox = 96,
	    sp = 59,
	    dx = -1,
	    dir = "right"
  		})
   

 		end
 	end
	end
end

function check_collision(ax, ay, aw, ah, bx, by, bw, bh)
  return not (
    ax + aw - 1 < bx or
    ax > bx + bw - 1 or
    ay + ah - 1 < by or
    ay > by + bh - 1
  )
end


function u_enemies()
  anitimer -= 1

  for e in all(enemies) do

    if e.dir == "right" then
      if abs(e.ex - e.ox) > 8.5 then e.dx = -e.dx end
      e.ex += e.dx * 0.5
    elseif e.dir == "up" then
      if abs(e.ey - e.oy) > 5 then e.dy = -e.dy end
      e.ey += e.dy * 0.5
    end

    if anitimer <= 0 then
      e.sp = (e.sp == 59 and 60 or 59)
    end

    -- collision smaller player hitbox
    local px, py, pw, ph = plr.x + 2, plr.y + 1, 4, 8
    local ex, ey, ew, eh = e.ex, e.ey, 8, 8

    if check_collision(px, py, pw, ph, ex, ey, ew, eh) then
      state = "dead"
    end
  end

  if anitimer <= 0 then anitimer = 20 end
end



function d_enemies()
    for e in all(enemies) do
        spr(e.sp, e.ex - cam_x, e.ey - cam_y)

        --  enemy collision box 
        rect(e.ex - cam_x, e.ey - cam_y, e.ex - cam_x + 7, e.ey - cam_y + 7, 7) 

        -- player's hitbox for debug
        local px, py, pw, ph = plr.x + 2, plr.y + 1, 1, 2
        rect(px - cam_x, py - cam_y, px - cam_x + pw - 1, py - cam_y + ph - 1, 6) 
    end
    --  player bounding box for reference
    rect(plr.x - cam_x, plr.y - cam_y, plr.x - cam_x + 7, plr.y - cam_y + 7, 5) 
end




--
--function draw_visibility()
--  for y=0,127 do
--    for x=0,127 do
--      local dx = x - plr.x
--      local dy = y - plr.y
--      if dx*dx + dy*dy > 600 then
--        pset(x, y, 0) -- black pixel
--      end
--    end
--  end
--end

__gfx__
00000000008880000088800000888000008880000000000000888000dddd0ddd3333333305001050888000008880000088800000888000000000000000000000
0000000000888880008888800088888000888880000000000088888055550d553333333354040004888880008888800088888000888880000000000000000000
0070070000717100007171000071710000717100000000000071710055550d553333333300000400717100007171000071710000717100000000000000000000
0007700000ffff0000ffff0000ffff0000ffff000000000000ffff00000000003333333300005000ffff6660ffff6660ffff0000ffff00000000000000000000
000770000f0ff0f0000ff0000f0ff0f0000ff00000000000000ff000d0dddddd33333333000041000ff004600ff004600ff040060ff040060000000000000000
0070070000fccf0000fccf0000fccf0000fccff00000000000fccf0050d555553333333300050005fccf4060fccf4060fccf0406fccf04060000000000000000
00000000000cc0000f0cc0f0000cc000000cc0000000000000fccf0050d5555533333333540000140cc400000cc400000cc000460cc000460000000000000000
0000000000c00c00000cc000000cc00000c00c0000000000000cc000000000003333333310001000c00c0000c00c0000c00c0660c00c06600000000000000000
00000000000000003333333333333333000000000000000004444440044444403333333305313350000000000000000000000000000000000000000000000000
00000000000000003333333333333333000000000000000040000004444444443333333343334345000000000000000000000000000000000000000000000000
00000000000000003999999933333333000000000000000040000004444444443333333333433333000000000000000000000000000000000000000000000000
0000000000000000933a3a3a33333333000000000000000040000004444444443333333333353333000000000000000000000000000000000000000000000000
0000000000000000a33a333333333333000000000000000040000004444445543333333333143333000000000000000000000000000000000000000000000000
00000000000000003aa3333333333333000000000000000040000004444444443333333353335333000000000000000000000000000000000000000000000000
00000000000000003333333333333333000000000000000040000004444444443333333341333345000000000000000000000000000000000000000000000000
00000000000000003333333333333333000000000000000040000004444444443333333333313331000000000000000000000000000000000000000000000000
22220222220202223314413333333333000000000000000000000000044444403333333300000000000000003222888300000000000000000000000000000000
44440244404402043155551333333333000000000000000000000000444444443333333300000000000000002228888800000000000000000000000000000000
44440244044402403315513333333333000000000000000000000000444444443333333300000000000000002288888800000000000000000000000000000000
00000000000000003128881333333333000000000000000000000000444444443333333300000000000000002888888800000000000000000000000000000000
20222222202002201227888133333333000000000000000000000000455444443333333300000000000000002888888800000000000000000000000000000000
40244444002444441278888133333333000000000000000000000000444444443333333300000000000000002888888800000000000000000000000000000000
40244444400404041228888133333333000000000000000000000000444444443333333300000000000000008888888800000000000000000000000000000000
00000000000000003122881333333333000000000000000000000000444444443333333300000000000000000000000000000000000000000000000000000000
02020020000000003331133333333333000000000000000000000000000000000000000000000000000000000000000000111100000000000000000000000000
40040204000000003314413333333333000000000000000000000000000000000000000000000000000000000011110001888810000000000000000000000000
00400040000000003155551333333333000000000000000000000000000000000000000000000000000000000188881018575781000000000000000000000000
00000000000000003315513333333333000000000000000000000000000000000000000000000000000000001857578118888881000000000000000000000000
20200200000000003127881333333333000000000000000000000000000000000000000000000000000000001888888101717881000000000000000000000000
00004040000000001278888133333333000000000000000000000000000000000000000000000000000000000171718117171881000000000000000000000000
40040404000000001228888133333333000000000000000000000000000000000000000000000000000000001888888118888881000000000000000000000000
00000000000000003111111333333333000000000000000000000000000000000000000000000000000000000111111001111110000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
70707070707070707070707070707070707070707070707070707070707070707000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000009000000000000000000000200000000050000000000000000090910000000000500000000000000000900100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0707070707070707070707070707070707070707070707070707070707070707070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07080808080808082b0808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080820080808120808082008080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808200808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07083b0808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808200808200707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708082208080808330808080820201708080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808200707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080820202008080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708082008080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808320808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808120808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0707070707070707070707070707070707070707270707070707072707070707070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0707070707070707070707070707070707070707170707070707071707070707070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808081717080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0708080808080808080808080808080707080808080808080808080808080807070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0707070707070707070707070707070707070707070707070707070707070707070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
0005000035050300500c050090000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
